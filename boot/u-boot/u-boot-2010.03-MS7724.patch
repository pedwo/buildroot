diff -ruNp u-boot-2010.03/board/renesas/ecovec/cmd_eeprom.c u-boot-2010.03-ecovec/board/renesas/ecovec/cmd_eeprom.c
--- u-boot-2010.03/board/renesas/ecovec/cmd_eeprom.c	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-2010.03-ecovec/board/renesas/ecovec/cmd_eeprom.c	2010-05-24 11:17:14.000000000 +0100
@@ -0,0 +1,188 @@
+/*
+ * Copyright (C) 2009 Renesas Solutions Corp.
+ * Copyright (C) 2009 Kuninori Morimoto <morimoto.kuninori@renesas.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+#include <common.h>
+#include <asm/processor.h>
+#include "ecovec.h"
+
+#define AREA(a, x, b) ((a <= x) && (x <= b))
+
+static int str2u8(char str[])
+{
+	u8 ret = 0, tmp;
+	int i;
+
+	for (i=0 ; i<2; i++) {
+		if (AREA('0',  str[i], '9'))
+			tmp = str[i] - '0';
+		else if (AREA('A', str[i], 'F'))
+			tmp = 10 + str[i] - 'A';
+		else if (AREA('a', str[i], 'f'))
+			tmp = 10 + str[i] - 'a';
+		else
+			return -1;
+		ret |= tmp << ((1-i)*4);
+	}
+
+	return (int)ret;
+}
+
+char s_env_mac[64];
+static int do_mac_write(cmd_tbl_t *cmdtp, int flag, int argc, char *argv[])
+{
+
+	u8 mac[6];
+	char *addr;
+	int i, val;
+
+	if (argc != 2)
+		return -1;
+
+	/* safe mode only */
+	if (0x01 & inb(PVDR))
+		return -1;
+
+	addr = argv[1];
+
+	/*
+	 * required string is
+	 *
+	 * AA:BB:CC:DD:EE:FF
+	 */
+	if (strlen(addr) != strlen("AA:BB:CC:DD:EE:FF")) {
+		printf("argv error\n");
+		return -1;
+	}
+
+	/* get data */
+	for (i=0 ; i<6 ; i++) {
+		val = str2u8(addr + (i*3));
+		if (val < 0) {
+			printf("value error\n");
+			return -1;
+		}
+		mac[i] = (u8)val;
+	}
+
+	/* top 3 addr is fixed */
+	if ((mac[0] != 0x00) ||
+	    (mac[1] != 0x00) ||
+	    (mac[2] != 0x87)) {
+		printf("mac addr error\n");
+		return -1;
+	}
+
+	/* ask to user */
+	printf("write mac addr (%02x:%02x:%02x:%02x:%02x:%02x) to eeprom\n",
+	       mac[0], mac[1], mac[2],
+	       mac[3], mac[4], mac[5]);
+	printf("OK? (Y/N)");
+
+	if ('Y' != getc()) {
+		printf("\ncanceled\n");
+		return -1;
+	}
+
+	/* to EEPROM */
+	i2c_init(1, 41666666);
+	for (i=0; i<6; i++)
+		i2c_raw_write(0x50, 0x10 + i, mac[i]);
+
+	/* set MAC addr */
+	sprintf (s_env_mac, "%02X:%02X:%02X:%02X:%02X:%02X",
+		 mac[0] & 0xFF,
+		 mac[1] & 0xFF,
+		 mac[2] & 0xFF,
+		 mac[3] & 0xFF,
+		 mac[4] & 0xFF,
+		 mac[5] & 0xFF);
+	setenv ("ethaddr", s_env_mac);
+
+	printf("\ndone\n");
+}
+
+static int do_ver_write(cmd_tbl_t *cmdtp, int flag, int argc, char *argv[])
+{
+
+	u8 ver;
+	int i, val;
+
+	if (argc != 2)
+		return -1;
+
+	/* safe mode only */
+	if (0x01 & inb(PVDR))
+		return -1;
+
+	/*
+	 * required string is AA
+	 */
+	if (strlen(argv[1]) != strlen("AA")) {
+		printf("argv error\n");
+		return -1;
+	}
+
+	/* hexl only now */
+	val = str2u8(argv[1]);
+	if (val < 0) {
+		printf("value error\n");
+		return -1;
+	}
+	ver = (u8)val;
+
+	/* ask to user */
+	printf("write var (%02x) to eeprom\n", ver);
+	printf("OK? (Y/N)");
+	if ('Y' != getc()) {
+		printf("\ncanceled\n");
+		return -1;
+	}
+
+	i2c_init(1, 41666666);
+	i2c_raw_write(0x50, 0x00, ver);
+	printf("\ndone\n");
+}
+
+static int do_eeprom_read(cmd_tbl_t *cmdtp, int flag, int argc, char *argv[])
+{
+	int i;
+	u8 mac[6];
+	u8 var;
+	i2c_init(1, 41666666);
+	var = i2c_raw_read(0x50, 0x00);
+	for (i=0; i<6; i++)
+		mac[i] = i2c_raw_read(0x50, 0x10 + i);
+
+	printf("Ver : %02x\n", var);
+	printf("Mac : %02x:%02x:%02x:%02x:%02x:%02x\n",
+	       mac[0], mac[1], mac[2],
+	       mac[3], mac[4], mac[5]);
+}
+
+U_BOOT_CMD(
+	_mac_write_,	2,	2,	do_mac_write,
+	"", "");
+
+U_BOOT_CMD(
+	_ver_write_,	2,	2,	do_ver_write,
+	"", "");
+
+U_BOOT_CMD(
+	_eeprom_read_,	1,	1,	do_eeprom_read,
+	"", "");
diff -ruNp u-boot-2010.03/board/renesas/ecovec/cmd_update_romimage.c u-boot-2010.03-ecovec/board/renesas/ecovec/cmd_update_romimage.c
--- u-boot-2010.03/board/renesas/ecovec/cmd_update_romimage.c	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-2010.03-ecovec/board/renesas/ecovec/cmd_update_romimage.c	2010-05-24 11:17:14.000000000 +0100
@@ -0,0 +1,144 @@
+/*
+ * Copyright (C) 2009 Renesas Solutions Corp.
+ * Copyright (C) 2009 Kuninori Morimoto <morimoto.kuninori@renesas.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+#include <common.h>
+#include <configs/ecovec.h>
+#define TOSTR(x) #x
+
+extern int do_usb(cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]);
+extern int do_fat_fsload (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]);
+extern int do_mem_cp ( cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]);
+extern int do_flerase (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]);
+int do_ext2load (cmd_tbl_t *cmdtp, int flag, int argc, char *argv[]);
+
+static int do_update_romimage(cmd_tbl_t *cmdtp, int flag, int argc, char *argv[])
+{
+	char dest[32];
+	char size[32];
+	char *arg[10];
+	int len;
+	int ret = 0;
+
+	/* usb start */
+	arg[0] = "usb";
+	arg[1] = "start";
+
+	ret = do_usb(cmdtp, flag, 2, arg);
+	if (ret) {
+		printf("\n****** usb start failed\n");
+		return ret;
+	}
+
+	/* load romimage from usb fat */
+	printf("\n"
+	       "*************************************************\n"
+	       "              LOAD ROMIMAGE FROM USB !!\n"
+	       "\n"
+	       "                   Please wait !!"
+	       "\n"
+	       "*************************************************\n");
+
+	arg[1] = "usb";
+	arg[2] = "0";
+	arg[3] = "0x89000000";
+
+	if (0 == strcmp(argv[1], "fat" )) {
+		arg[0] = "fatload";
+		arg[4] = "romimage";
+		ret = do_fat_fsload(cmdtp, flag, 5, arg);
+	} else {
+		arg[0] = "ext2load";
+		arg[4] = "romImage";
+		ret = do_ext2load(cmdtp, flag, 5, arg);
+		if (ret > 1)
+			ret = 0;
+	}
+
+	if (ret) {
+		printf("\n******  romimage load failed\n");
+		goto end;
+	}
+
+	len = simple_strtoul(getenv ("filesize"), NULL, 16);
+
+	/* ask to user */
+	printf("write romimage to flash (%d)\n", len);
+	printf("OK? (Y/N)");
+	if ('Y' != getc()) {
+		printf("\ncanceled\n");
+		ret = -1;
+		goto end;
+	}
+
+	/* copy romimage to flash */
+	printf("\n"
+	       "*************************************************\n"
+	       "                   CAUTION !!\n"
+	       "\n"
+	       "         Don't touch EcoVec while updating !!"
+	       "\n"
+	       "*************************************************\n");
+
+	/* erase flash area */
+	sprintf(size, "+%x", len);
+	sprintf(dest, "0x%08x", CFG_ECOVEC_ROMIMAGE_ADDR);
+
+	arg[0] = "erase";
+	arg[1] = dest;
+	arg[2] = size;
+	ret = do_flerase(cmdtp, flag, 3, arg);
+	if (ret) {
+		printf("\n******  flash erase failed\n");
+		goto end;
+	}
+
+	/* cp to flash
+	 *
+	 * change len to use cp.w
+	 */
+	len /= 2;
+	sprintf(size, "0x%08x", len);
+
+	arg[0] = "cp.w";
+	arg[1] = "0x89000000";
+	arg[2] = dest;
+	arg[3] = size;
+
+	ret = do_mem_cp (cmdtp, flag,  4, arg);
+	if (ret) {
+		printf("\n******  update failed\n");
+		goto end;
+	}
+
+	printf("*************************************************\n"
+	       "                UPDATE COMPLETED !!\n"
+	       "*************************************************\n");
+
+end:
+	/* usb stop */
+	arg[0] = "usb";
+	arg[1] = "stop";
+	ret = do_usb(cmdtp, flag, 2, arg);
+
+	return ret;
+}
+
+U_BOOT_CMD(
+	_update_romimage_,	2,	1,	do_update_romimage,
+	"", "");
diff -ruNp u-boot-2010.03/board/renesas/ecovec/config.mk u-boot-2010.03-ecovec/board/renesas/ecovec/config.mk
--- u-boot-2010.03/board/renesas/ecovec/config.mk	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-2010.03-ecovec/board/renesas/ecovec/config.mk	2010-05-24 11:17:14.000000000 +0100
@@ -0,0 +1,26 @@
+#
+# Copyright (C) 2007
+# Nobuhiro Iwamatsu <iwamatsu@nigauri.org>
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+
+#
+# TEXT_BASE refers to image _after_ relocation.
+#
+# NOTE: Must match value used in u-boot.lds (in this directory).
+#
+
+TEXT_BASE = 0x8FFC0000
diff -ruNp u-boot-2010.03/board/renesas/ecovec/ecovec.c u-boot-2010.03-ecovec/board/renesas/ecovec/ecovec.c
--- u-boot-2010.03/board/renesas/ecovec/ecovec.c	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-2010.03-ecovec/board/renesas/ecovec/ecovec.c	2010-05-24 11:17:14.000000000 +0100
@@ -0,0 +1,159 @@
+/*
+ * Copyright (C) 2009 Renesas Solutions Corp.
+ * Copyright (C) 2009 Kuninori Morimoto <morimoto.kuninori@renesas.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <common.h>
+#include <asm/io.h>
+#include <asm/processor.h>
+#include "ecovec.h"
+
+#define MASKSETx(x, addr, mask, set) out ## x((in ## x(addr) & ~(mask)) | (set), (addr))
+#define MASKSET32(addr, mask, set) MASKSETx(l, (addr), (mask), (set))
+#define MASKSET16(addr, mask, set) MASKSETx(w, (addr), (mask), (set))
+#define MASKSET8(addr, mask, set)  MASKSETx(b, (addr), (mask), (set))
+
+static void debug_led(u8 led)
+{
+	/* PDGR[0-4] is debug LED */
+	MASKSET8(PGDR, 0x0F, (led & 0x0F));
+}
+
+int checkboard(void)
+{
+	puts("BOARD: ecovec\n");
+	return 0;
+}
+
+#define MSK(x)    (0x3 << (x*2))
+#define OUT(x)    (0x1 << (x*2))
+#define IN(x)     (0x2 << (x*2))
+#define BIT(x)    (1 << x)
+
+char s_env_mac[64];
+int board_late_init(void)
+{
+	u8 mac[6];
+	int i;
+
+	udelay(1024*100);
+
+	/* SH-Eth (PLCR, PNCR, PXCR, PSELx )*/
+	MASKSET16(PLCR, MSK(2) | MSK(3) | MSK(4) | MSK(5) | MSK(6) | MSK(7), 0);
+	MASKSET16(PNCR, MSK(1) | MSK(0), 0);
+	MASKSET16(PXCR, MSK(3) | MSK(4) | MSK(5) , 0); 
+	MASKSET16(PSELB, 0x030F, 0x020a);
+	MASKSET16(PSELC, 0x0307, 0x0207);
+	MASKSET16(PSELE, 0x00c0, 0x0080);
+
+	debug_led(BIT(3));
+
+	MASKSET32(MSTPCR1, 0x300,0); MASKSET32(MSTPCR2, 0x10000000, 0);
+
+	outl(0x1, 0xA4600000);
+
+	/* read Mac addr */
+	i2c_init(1, 41666666);
+	for (i=0 ; i<6; i++)
+		mac[i] = i2c_raw_read(0x50, 0x10 + i);
+
+	/* set MAC addr */
+	sprintf (s_env_mac, "%02X:%02X:%02X:%02X:%02X:%02X",
+		 mac[0] & 0xFF,
+		 mac[1] & 0xFF,
+		 mac[2] & 0xFF,
+		 mac[3] & 0xFF,
+		 mac[4] & 0xFF,
+		 mac[5] & 0xFF);
+	setenv ("ethaddr", s_env_mac);
+
+	debug_led(BIT(0) | BIT(1) | BIT(2) | BIT(3));
+
+	return 0;
+}
+
+static void enable_all_device( void )
+{
+	/* MII */
+	MASKSET16(PACR, MSK(1), OUT(1));
+	MASKSET8(PADR,  BIT(1), BIT(1));
+
+	/* camera */
+	MASKSET16(PACR, MSK(3) | MSK(4),
+		        OUT(3) | OUT(4));
+	MASKSET8(PADR,  BIT(3) | BIT(4),
+		        BIT(3) | BIT(4));
+
+	/* video */
+	MASKSET16(PUCR, MSK(2) | MSK(3),
+		        OUT(2) | OUT(3));
+	MASKSET8(PUDR,  BIT(2) | BIT(3), 0);
+
+	/* audio */
+	MASKSET16(PUCR, MSK(0), OUT(0));
+	MASKSET8(PUDR,  BIT(0), 0);
+}
+
+int board_init(void)
+{
+	enable_all_device();
+
+	/* LED (PTG) */
+	MASKSET16(PGCR,
+		MSK(0) | MSK(1) | MSK(2) | MSK(3),
+		OUT(0) | OUT(1) | OUT(2) | OUT(3));
+	MASKSET16(HIZCRA, BIT(1), 0);
+
+	debug_led(BIT(0));
+
+	/* SCIF0 (PTF, PTM) */
+	MASKSET16(PFCR, MSK(2), 0);
+	MASKSET16(PMCR, MSK(1), 0);
+	MASKSET16(PSELA, BIT(6), BIT(6));
+
+	debug_led(BIT(1));
+
+	/* RMII (PTA) */
+	MASKSET16(PACR, MSK(1), OUT(1));
+	MASKSET8(PADR, BIT(1), BIT(1));
+
+	debug_led(BIT(2));
+
+	/* USB host */
+	MASKSET16(PBCR, MSK(4), OUT(4));
+	MASKSET8(PBDR, BIT(4), BIT(4));
+	MASKSET32(MSTPCR2, (1 << 20), 0);
+	outw(0x0600, 0xa40501d4);
+
+	debug_led(BIT(3));
+
+	/* debug switch */
+	MASKSET16(PVCR, MSK(0), IN(0));
+
+	return 0;
+}
+
+int dram_init(void)
+{
+	DECLARE_GLOBAL_DATA_PTR;
+
+	gd->bd->bi_memstart = CONFIG_SYS_SDRAM_BASE;
+	gd->bd->bi_memsize  = CONFIG_SYS_SDRAM_SIZE;
+	printf("DRAM:  %dMB\n", CONFIG_SYS_SDRAM_SIZE / (1024 * 1024));
+	return 0;
+}
diff -ruNp u-boot-2010.03/board/renesas/ecovec/ecovec.h u-boot-2010.03-ecovec/board/renesas/ecovec/ecovec.h
--- u-boot-2010.03/board/renesas/ecovec/ecovec.h	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-2010.03-ecovec/board/renesas/ecovec/ecovec.h	2010-05-24 11:17:14.000000000 +0100
@@ -0,0 +1,11 @@
+#ifndef ECOVEC_H
+#define ECOVEC_H
+
+#include <asm/types.h>
+#include <asm/io.h>
+
+void i2c_init(int, int);
+void i2c_raw_write(u8, u8, u8);
+u8   i2c_raw_read(u8, u8);
+
+#endif
diff -ruNp u-boot-2010.03/board/renesas/ecovec/i2c.c u-boot-2010.03-ecovec/board/renesas/ecovec/i2c.c
--- u-boot-2010.03/board/renesas/ecovec/i2c.c	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-2010.03-ecovec/board/renesas/ecovec/i2c.c	2010-05-24 11:17:14.000000000 +0100
@@ -0,0 +1,217 @@
+/*
+ * Copyright (C) 2009 Renesas Solutions Corp.
+ * Copyright (C) 2009 Kuninori Morimoto <morimoto.kuninori@renesas.com>
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#include <asm/io.h>
+/* ------ for sano --------- */
+/*
+#include "ecovec.h"
+
+typedef unsigned char  u8;
+typedef unsigned short u16;
+typedef unsigned long  u32;
+
+#define writeb(val, addr) (*(u8 *)(addr)) = val
+#define readb(addr)       (*(u8 *)(addr))
+*/
+/* ------------------- */
+
+/* register */
+#define I2C0_BASE 0xA4470000
+#define I2C1_BASE 0xA4750000
+
+#define ICDR 0x0000
+#define ICCR 0x0004
+#define ICSR 0x0008
+#define ICIC 0x000C
+#define ICCL 0x0010
+#define ICCH 0x0014
+
+/* ICCR */
+#define START  0x94
+#define TX2RX  0x81
+#define TXSTOP 0x90
+#define RXSTOP 0xc0
+
+#define ICE  (1 << 7)
+#define RACK (1 << 6)
+#define TRS  (1 << 4)
+#define BBSY (1 << 2)
+#define SCP  (1 << 0)
+
+/* ICIC/ICSR */
+#define BUSY 0x10
+#define TACK 0x04
+#define WAIT 0x02
+#define DTE  0x01
+
+static int gbase;
+static u8 iccl, icch;
+static void reg_write(u32 addr, u8 val)
+{
+	writeb(val, addr + gbase);
+}
+
+static u8 reg_read(u32 addr)
+{
+	return readb(addr + gbase);
+}
+
+static void irq_wait(void)
+{
+	u8 status;
+	int i;
+
+	for ( i=0 ; i<1000 ; i++ ) {
+		status = reg_read(ICSR);
+		if (status & WAIT)
+			break;
+		udelay(10);
+	}
+
+	reg_write(ICSR, status & ~WAIT);
+}
+
+static void irq_dte(void)
+{
+	int i;
+
+	for ( i=0 ; i<1000 ; i++) {
+		if (DTE & reg_read(ICSR))
+			break;
+		udelay(10);
+	}
+}
+
+static void irq_busy(void)
+{
+	int i;
+
+	for ( i=0 ; i<1000 ; i++ ) {
+		if (!(BUSY & reg_read(ICSR)))
+			break;
+		udelay(10);
+	}
+}
+
+void i2c_init(int port, int i2c_clk)
+{
+	int speed   = 100000;
+	int num, denom, tmp;
+
+	if (0 == port)
+		gbase = I2C0_BASE;
+	else
+		gbase = I2C1_BASE;
+
+	/* Calculate the value for iccl. From the data sheet:
+	 * iccl = (p clock / transfer rate) * (L / (L + H))
+	 * where L and H are the SCL low/high ratio (5/4 in this case).
+	 * We also round off the result.
+	 */
+	num = i2c_clk * 5;
+	denom = speed * 9;
+	tmp = num * 10 / denom;
+	if (tmp % 10 >= 5)
+		iccl = (u8)((num/denom) + 1);
+	else
+		iccl = (u8)(num/denom);
+
+	/* Calculate the value for icch. From the data sheet:
+	   icch = (p clock / transfer rate) * (H / (L + H)) */
+	num = i2c_clk * 4;
+	tmp = num * 10 / denom;
+	if (tmp % 10 >= 5)
+		icch = (u8)((num/denom) + 1);
+	else
+		icch = (u8)(num/denom);
+
+}
+
+static void i2c_set_addr(u8 id, u8 reg, int stop)
+{
+	int i;
+
+	reg_write(ICCR, reg_read(ICCR) & ~0x80);
+	reg_write(ICCR, reg_read(ICCR) | 0x80);
+
+	reg_write(ICCL, iccl);
+	reg_write(ICCH, icch);
+	reg_write(ICIC, 0);
+
+	reg_write(ICCR, START);
+	irq_dte();
+
+	reg_write(ICDR, id << 1);
+	irq_dte();
+
+	reg_write(ICDR, reg);
+	if (stop)
+		reg_write(ICCR, TXSTOP);
+	irq_dte();
+}
+
+static void i2c_end()
+{
+	reg_write(ICSR, 0);
+	reg_write(ICCR, reg_read(ICCR) & ~0x80);
+}
+
+/* i2c write */
+void i2c_raw_write(u8 id, u8 reg, u8 val)
+{
+	i2c_set_addr(id, reg, 0);
+	udelay(10);
+
+	reg_write(ICDR, val);
+	irq_dte();
+
+	reg_write(ICCR, TXSTOP);
+	irq_dte();
+	irq_busy();
+
+	i2c_end();
+}
+
+/* 1byte read */
+u8 i2c_raw_read(u8 id, u8 reg)
+{
+	u8 ret;
+
+	i2c_set_addr(id, reg, 1);
+	udelay(100);
+
+	reg_write(ICCR, START);
+	irq_dte();
+
+	reg_write(ICDR, id << 1 | 0x01);
+	irq_dte();
+
+	reg_write(ICCR, TX2RX);
+	irq_dte();
+
+	ret = reg_read(ICDR);
+
+	reg_write(ICCR, RXSTOP);
+	reg_read(ICDR); /* dummy read */
+	irq_busy();
+
+	i2c_end();
+	return ret;
+}
diff -ruNp u-boot-2010.03/board/renesas/ecovec/lowlevel_init.S u-boot-2010.03-ecovec/board/renesas/ecovec/lowlevel_init.S
--- u-boot-2010.03/board/renesas/ecovec/lowlevel_init.S	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-2010.03-ecovec/board/renesas/ecovec/lowlevel_init.S	2010-05-24 11:17:14.000000000 +0100
@@ -0,0 +1,69 @@
+/*
+ * Copyright (C) 2009 Renesas Solutions Corp.
+ * Copyright (C) 2009 Kuninori Morimoto <morimoto.kuninori@renesas.com>
+ *
+ * board/renesas/ecovec/lowlevel_init.S
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+/*
+ * Board specific low level init code, called _very_ early in the
+ * startup sequence. Relocation to SDRAM has not happened yet, no
+ * stack is available, bss section has not been initialised, etc.
+ *
+ * (Note: As no stack is available, no subroutines can be called...).
+ */
+
+#include "partner-jet-cmd.h"
+#include <configs/ecovec.h>
+
+	.global	lowlevel_init
+
+	.text
+	.align	2
+
+lowlevel_init:
+
+	/* jump to 0xA0020000 if normal mode */
+	mov.l	PVDR_A, r1
+	mov.l	PVDR_D, r2
+	mov.b	@r1, r0
+	tst	r0, r2
+	bt	1f
+	mov.l	JUMP_A, r1
+	jmp	@r1
+	nop
+1:
+
+#include "partner-jet-setup.txt"
+
+	! BL bit off (init = ON) (?!?)
+
+	stc	sr, r0				! BL bit off(init=ON)
+	mov.l	SR_MASK_D, r1
+	and	r1, r0
+	ldc	r0, sr
+
+	rts
+	 mov	#0, r0
+
+	.align	2
+SR_MASK_D:	.long	0xEFFFFF0F
+
+PVDR_A:		.long	0xA4050164
+PVDR_D:		.long	0x01
+JUMP_A:		.long	CFG_ECOVEC_ROMIMAGE_ADDR
\ No newline at end of file
diff -ruNp u-boot-2010.03/board/renesas/ecovec/Makefile u-boot-2010.03-ecovec/board/renesas/ecovec/Makefile
--- u-boot-2010.03/board/renesas/ecovec/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-2010.03-ecovec/board/renesas/ecovec/Makefile	2010-05-24 11:17:14.000000000 +0100
@@ -0,0 +1,51 @@
+#########################################################################
+#
+# Copyright (C) 2009 Renesas Solutions Corp.
+# Copyright (C) 2009 Kuninori Morimoto <morimoto.kuninori@renesas.com>
+#
+# board/renesas/ecovec/Makefile
+#
+# This program is free software; you can redistribute it and/or
+# modify it under the terms of the GNU General Public License as
+# published by the Free Software Foundation; either version 2 of
+# the License, or (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+# MA 02111-1307 USA
+#
+
+include $(TOPDIR)/config.mk
+
+LIB	= $(obj)lib$(BOARD).a
+
+COBJS	:= ecovec.o i2c.o cmd_eeprom.o cmd_update_romimage.o
+SOBJS	:= lowlevel_init.o
+
+SRCS	:= $(SOBJS:.o=.S) $(COBJS:.o=.c)
+OBJS	:= $(addprefix $(obj),$(COBJS))
+SOBJS	:= $(addprefix $(obj),$(SOBJS))
+
+$(LIB):	$(OBJS) $(SOBJS)
+	$(AR) $(ARFLAGS) $@ $(OBJS) $(SOBJS)
+
+clean:
+	rm -f $(SOBJS) $(OBJS)
+
+distclean:	clean
+	rm -f $(LIB) core *.bak $(obj).depend
+
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+
+sinclude $(obj).depend
+
+#########################################################################
diff -ruNp u-boot-2010.03/board/renesas/ecovec/partner-jet-cmd.h u-boot-2010.03-ecovec/board/renesas/ecovec/partner-jet-cmd.h
--- u-boot-2010.03/board/renesas/ecovec/partner-jet-cmd.h	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-2010.03-ecovec/board/renesas/ecovec/partner-jet-cmd.h	2010-05-24 11:17:14.000000000 +0100
@@ -0,0 +1,90 @@
+/* The LIST command is used to include comments in the script */
+.macro	LIST comment
+.endm
+
+/* The ED command is used to write a 32-bit word */
+.macro  ED, addr, data
+        mov.l 1f ,r1
+        mov.l 2f ,r0
+        mov.l r0, @r1
+	bra 3f
+	 nop
+	.align 2
+1:	.long \addr
+2:	.long \data
+3:
+.endm
+
+/* The EW command is used to write a 16-bit word */
+.macro  EW, addr, data
+        mov.l 1f ,r1
+        mov.l 2f ,r0
+        mov.w r0, @r1
+	bra 3f
+	 nop
+	.align 2
+1:	.long \addr
+2:	.long \data
+3:
+.endm
+
+/* The EB command is used to write an 8-bit word */
+.macro  EB, addr, data
+        mov.l 1f ,r1
+        mov.l 2f ,r0
+        mov.b r0, @r1
+	bra 3f
+	 nop
+	.align 2
+1:	.long \addr
+2:	.long \data
+3:
+.endm
+
+/* The WAIT command is used to delay the execution */
+.macro  WAIT, time
+        mov.l  2f ,r3
+1:
+        nop
+        tst     r3, r3
+        bf/s    1b
+         dt      r3
+	bra	3f
+	 nop
+	.align 2
+2:	.long \time * 100
+3:
+.endm
+
+/* The DD command is used to read a 32-bit word */
+.macro  DD, addr, addr2, nr
+        mov.l 1f ,r1
+        mov.l @r1, r0
+	bra 2f
+	 nop
+	.align 2
+1:	.long \addr
+2:
+.endm
+
+/* The DW command is used to read a 16-bit word */
+.macro  DW, addr, addr2, nr
+	mov.l 1f ,r1
+	mov.w @r1, r0
+	bra 2f
+	nop
+	.align 2
+1:	.long \addr
+2:
+.endm
+
+/* The DB command is used to read a 8-bit word */
+.macro  DB, addr, addr2, nr
+	mov.l 1f ,r1
+	mov.b @r1, r0
+	bra 2f
+	nop
+	.align 2
+1:	.long \addr
+2:
+.endm
diff -ruNp u-boot-2010.03/board/renesas/ecovec/partner-jet-setup.txt u-boot-2010.03-ecovec/board/renesas/ecovec/partner-jet-setup.txt
--- u-boot-2010.03/board/renesas/ecovec/partner-jet-setup.txt	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-2010.03-ecovec/board/renesas/ecovec/partner-jet-setup.txt	2010-05-24 11:17:14.000000000 +0100
@@ -0,0 +1,80 @@
+LIST "partner-jet-setup.txt"
+LIST "(C) Copyright 2009 Renesas Solutions Corp"
+LIST "Kuninori Morimoto <morimoto.kuninori@renesas.com>"
+LIST "--------------------------------"
+LIST "uboot.bin (Flash boot)"
+LIST "Use the following command to burn the uboot to flash via JTAG:"
+LIST "> RD uboot.bin, 0"
+LIST "--------------------------------"
+
+LIST "disable watchdog"
+EW 0xa4520004, 0xa507
+
+LIST "MMU"
+ED 0xff000010, 0x00000004
+
+LIST "setup clocks"
+ED 0xa4150024, 0x00004000
+ED 0xa4150000, 0x8E003508
+ED 0xa4150004, 0x00000000
+
+WAIT 1
+
+LIST "BSC"
+ED 0xff800020, 0xa5a50000
+ED 0xfec10000, 0x00000013
+ED 0xfec10004, 0x11110400
+ED 0xfec10024, 0x00000440
+
+WAIT 1
+
+LIST "setup sdram"
+ED 0xfd000108, 0x00000181
+ED 0xfd000020, 0x015B0002
+ED 0xfd000030, 0x03061502
+ED 0xfd000034, 0x02020102
+ED 0xfd000038, 0x01090305
+ED 0xfd00003c, 0x00000002
+ED 0xfd000008, 0x00000005
+ED 0xfd000018, 0x00000001
+
+WAIT 1
+
+ED 0xfd000014, 0x00000002
+ED 0xfd000060, 0x00020000
+ED 0xfd000060, 0x00030000
+ED 0xfd000060, 0x00010040
+ED 0xfd000060, 0x00000532
+ED 0xfd000014, 0x00000002
+ED 0xfd000014, 0x00000004
+ED 0xfd000014, 0x00000004
+ED 0xfd000060, 0x00000432
+ED 0xfd000060, 0x000103C0
+ED 0xfd000060, 0x00010040
+
+WAIT 1
+
+ED 0xfd000010, 0x00000001
+ED 0xfd000044, 0x00000613
+ED 0xfd000048, 0x238C003A
+ED 0xfd000014, 0x00000002
+
+LIST "Dummy read"
+DD 0x0c400000, 0x0c400000
+
+LIST "read 16 bytes from sdram"
+DD 0xa8000000, 0xa8000000, 1
+DD 0xa8000004, 0xa8000004, 1
+DD 0xa8000008, 0xa8000008, 1
+DD 0xa800000c, 0xa800000c, 1
+
+
+ED 0xfd000014, 0x00000002
+ED 0xfd000014, 0x00000004
+ED 0xfd000108, 0x00000080
+ED 0xfd000040, 0x00010000
+
+WAIT 1
+
+LIST "setup cache"
+ED 0xff00001c, 0x0000090b
diff -ruNp u-boot-2010.03/board/renesas/ecovec/u-boot.lds u-boot-2010.03-ecovec/board/renesas/ecovec/u-boot.lds
--- u-boot-2010.03/board/renesas/ecovec/u-boot.lds	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-2010.03-ecovec/board/renesas/ecovec/u-boot.lds	2010-05-24 11:17:14.000000000 +0100
@@ -0,0 +1,105 @@
+/*
+ * Copyrigth (c) 2007
+ * Nobuhiro Iwamatsu <iwamatsu@nigauri.org>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+OUTPUT_FORMAT("elf32-sh-linux", "elf32-sh-linux", "elf32-sh-linux")
+OUTPUT_ARCH(sh)
+ENTRY(_start)
+
+SECTIONS
+{
+	/*
+	   Base address of internal SDRAM is 0x88000000.
+	   Although size of SDRAM can be either 16 or 32 MBytes,
+	   we assume 16 MBytes (ie ignore upper half if the full
+	   32 MBytes is present).
+
+	   NOTE: This address must match with the definition of
+	   TEXT_BASE in config.mk (in this directory).
+
+	*/
+	. = 0x88000000 + (128*1024*1024) - (256*1024);
+
+	PROVIDE (reloc_dst = .);
+
+	PROVIDE (_ftext = .);
+	PROVIDE (_fcode = .);
+	PROVIDE (_start = .);
+
+	.text :
+	{
+		cpu/sh4/start.o		(.text)
+		. = ALIGN(8192);
+		common/env_embedded.o	(.ppcenv)
+		. = ALIGN(8192);
+		common/env_embedded.o	(.ppcenvr)
+		. = ALIGN(8192);
+		*(.text)
+		. = ALIGN(4);
+	} =0xFF
+	PROVIDE (_ecode = .);
+	.rodata :
+	{
+		*(.rodata)
+		. = ALIGN(4);
+	}
+	PROVIDE (_etext = .);
+
+
+	PROVIDE (_fdata = .);
+	.data :
+	{
+		*(.data)
+		. = ALIGN(4);
+	}
+	PROVIDE (_edata = .);
+
+	PROVIDE (_fgot = .);
+	.got :
+	{
+		*(.got)
+		. = ALIGN(4);
+	}
+	PROVIDE (_egot = .);
+
+	PROVIDE (__u_boot_cmd_start = .);
+	.u_boot_cmd :
+	{
+		*(.u_boot_cmd)
+		. = ALIGN(4);
+	}
+	PROVIDE (__u_boot_cmd_end = .);
+
+	PROVIDE (reloc_dst_end = .);
+	/* _reloc_dst_end = .; */
+
+	PROVIDE (bss_start = .);
+	PROVIDE (__bss_start = .);
+	.bss :
+	{
+		*(.bss)
+		. = ALIGN(4);
+	}
+	PROVIDE (bss_end = .);
+
+	PROVIDE (_end = .);
+}
diff -ruNp u-boot-2010.03/drivers/net/sh_eth.c u-boot-2010.03-ecovec/drivers/net/sh_eth.c
--- u-boot-2010.03/drivers/net/sh_eth.c	2010-03-31 22:54:39.000000000 +0100
+++ u-boot-2010.03-ecovec/drivers/net/sh_eth.c	2010-05-24 11:51:44.000000000 +0100
@@ -53,15 +53,15 @@ static void sh_eth_mii_write_phy_bits(in
 		/* Write direction, bit to write, clock is low */
 		pir = 2 | ((val & 1 << i) ? 1 << 2 : 0);
 		outl(pir, PIR(port));
-		udelay(1);
+		udelay(350);
 		/* Write direction, bit to write, clock is high */
 		pir = 3 | ((val & 1 << i) ? 1 << 2 : 0);
 		outl(pir, PIR(port));
-		udelay(1);
+		udelay(350);
 		/* Write direction, bit to write, clock is low */
 		pir = 2 | ((val & 1 << i) ? 1 << 2 : 0);
 		outl(pir, PIR(port));
-		udelay(1);
+		udelay(350);
 	}
 }
 
@@ -69,20 +69,20 @@ static void sh_eth_mii_bus_release(int p
 {
 	/* Read direction, clock is low */
 	outl(0, PIR(port));
-	udelay(1);
+	udelay(350);
 	/* Read direction, clock is high */
 	outl(1, PIR(port));
-	udelay(1);
+	udelay(350);
 	/* Read direction, clock is low */
 	outl(0, PIR(port));
-	udelay(1);
+	udelay(350);
 }
 
 static void sh_eth_mii_ind_bus_release(int port)
 {
 	/* Read direction, clock is low */
 	outl(0, PIR(port));
-	udelay(1);
+	udelay(350);
 }
 
 static void sh_eth_mii_read_phy_bits(int port, u32 *val, int len)
@@ -94,13 +94,13 @@ static void sh_eth_mii_read_phy_bits(int
 	for (i = len - 1; i >= 0; i--) {
 		/* Read direction, clock is high */
 		outl(1, PIR(port));
-		udelay(1);
+		udelay(350);
 		/* Read bit */
 		pir = inl(PIR(port));
 		*val |= (pir & 8) ? 1 << i : 0;
 		/* Read direction, clock is low */
 		outl(0, PIR(port));
-		udelay(1);
+		udelay(350);
 	}
 }
 
@@ -140,6 +140,9 @@ static u32 sh_eth_mii_read_phy_reg(int p
 	/* Read register */
 	sh_eth_mii_read_phy_bits(port, &val, 16);
 
+	/* Bus release */
+	sh_eth_mii_bus_release(port);
+
 	return val;
 }
 
@@ -175,6 +178,9 @@ static void sh_eth_mii_write_phy_reg(int
 
 	/* Independent bus release */
 	sh_eth_mii_ind_bus_release(port);
+
+	/* Bus release */
+	sh_eth_mii_bus_release(port);
 }
 
 int sh_eth_send(struct eth_device *dev, volatile void *packet, int len)
@@ -272,6 +278,7 @@ static int sh_eth_reset(struct sh_eth_de
 	int port = eth->port;
 	int ret = 0, i;
 
+#if defined(CONFIG_CPU_SH7763)
 	/* Start e-dmac transmitter and receiver */
 	outl(EDSR_ENALL, EDSR(port));
 
@@ -287,6 +294,11 @@ static int sh_eth_reset(struct sh_eth_de
 		printf(SHETHER_NAME  ": Software reset timeout\n");
 		ret = -EIO;
 	}
+#else
+	outl(inl(EDMR(port)) | EDMR_SRST, EDMR(port));
+	udelay(3000);
+	outl(inl(EDMR(port)) & ~EDMR_SRST, EDMR(port));
+#endif
 
 	return ret;
 }
@@ -331,9 +343,11 @@ static int sh_eth_tx_desc_init(struct sh
 	/* Point the controller to the tx descriptor list. Must use physical
 	   addresses */
 	outl(ADDR_TO_PHY(port_info->tx_desc_base), TDLAR(port));
+#if defined(CONFIG_CPU_SH7763)
 	outl(ADDR_TO_PHY(port_info->tx_desc_base), TDFAR(port));
 	outl(ADDR_TO_PHY(cur_tx_desc), TDFXR(port));
 	outl(0x01, TDFFR(port));/* Last discriptor bit */
+#endif
 
 err:
 	return ret;
@@ -396,9 +410,11 @@ static int sh_eth_rx_desc_init(struct sh
 
 	/* Point the controller to the rx descriptor list */
 	outl(ADDR_TO_PHY(port_info->rx_desc_base), RDLAR(port));
+#if defined(CONFIG_CPU_SH7763)
 	outl(ADDR_TO_PHY(port_info->rx_desc_base), RDFAR(port));
 	outl(ADDR_TO_PHY(cur_rx_desc), RDFXR(port));
 	outl(RDFFR_RDLF, RDFFR(port));
+#endif
 
 	return ret;
 
@@ -523,7 +539,9 @@ static int sh_eth_config(struct sh_eth_d
 	outl(0, TFTR(port));
 	outl((FIFO_SIZE_T | FIFO_SIZE_R), FDR(port));
 	outl(RMCR_RST, RMCR(port));
+#ifndef CONFIG_CPU_SH7724
 	outl(0, RPADIR(port));
+#endif
 	outl((FIFO_F_D_RFF | FIFO_F_D_RFD), FCFTR(port));
 
 	/* Configure e-mac registers */
@@ -538,11 +556,12 @@ static int sh_eth_config(struct sh_eth_d
 	outl(val, MALR(port));
 
 	outl(RFLR_RFL_MIN, RFLR(port));
+#ifndef CONFIG_CPU_SH7724
 	outl(0, PIPR(port));
 	outl(APR_AP, APR(port));
 	outl(MPR_MP, MPR(port));
 	outl(TPAUSER_TPAUSE, TPAUSER(port));
-
+#endif
 	/* Configure phy */
 	ret = sh_eth_phy_config(eth);
 	if (ret) {
@@ -553,6 +572,8 @@ static int sh_eth_config(struct sh_eth_d
 	phy_status = sh_eth_mii_read_phy_reg(port, port_info->phy_addr, 1);
 
 	/* Set the transfer speed */
+	val = 0x0;
+#ifdef CONFIG_CPU_SH7763
 	if (phy_status & (PHY_S_100X_F|PHY_S_100X_H)) {
 		printf(SHETHER_NAME ": 100Base/");
 		outl(GECMR_100B, GECMR(port));
@@ -560,14 +581,23 @@ static int sh_eth_config(struct sh_eth_d
 		printf(SHETHER_NAME ": 10Base/");
 		outl(GECMR_10B, GECMR(port));
 	}
+#endif
+#if defined(CONFIG_CPU_SH7724)
+	if (phy_status & (PHY_S_100X_F|PHY_S_100X_H)) {
+		printf("100Base/");
+		val = ECMR_RTM;
+	} else {
+		printf("10Base/");
+	}
+#endif
 
 	/* Check if full duplex mode is supported by the phy */
 	if (phy_status & (PHY_S_100X_F|PHY_S_10T_F)) {
 		printf("Full\n");
-		outl((ECMR_CHG_DM|ECMR_RE|ECMR_TE|ECMR_DM), ECMR(port));
+		outl(val | (ECMR_CHG_DM|ECMR_RE|ECMR_TE|ECMR_DM), ECMR(port));
 	} else {
 		printf("Half\n");
-		outl((ECMR_CHG_DM|ECMR_RE|ECMR_TE),  ECMR(port));
+		outl(val | (ECMR_CHG_DM|ECMR_RE|ECMR_TE),  ECMR(port));
 	}
 
 	return ret;
diff -ruNp u-boot-2010.03/drivers/net/sh_eth.h u-boot-2010.03-ecovec/drivers/net/sh_eth.h
--- u-boot-2010.03/drivers/net/sh_eth.h	2010-03-31 22:54:39.000000000 +0100
+++ u-boot-2010.03-ecovec/drivers/net/sh_eth.h	2010-05-24 11:17:16.000000000 +0100
@@ -93,6 +93,7 @@ struct sh_eth_dev {
 };
 
 /* Register Address */
+#ifdef CONFIG_CPU_SH7763
 #define BASE_IO_ADDR	0xfee00000
 
 #define EDSR(port)		(BASE_IO_ADDR + 0x800 * (port) + 0x0000)
@@ -130,6 +131,33 @@ struct sh_eth_dev {
 #define MALR(port)		(BASE_IO_ADDR + 0x800 * (port) + 0x05c8)
 #define MAHR(port)		(BASE_IO_ADDR + 0x800 * (port) + 0x05c0)
 
+#elif defined(CONFIG_CPU_SH7724)
+#define BASE_IO_ADDR	0xA4600000
+
+#define TDLAR(port)		(BASE_IO_ADDR + 0x0018)
+#define RDLAR(port)		(BASE_IO_ADDR + 0x0020)
+
+#define EDMR(port)		(BASE_IO_ADDR + 0x0000)
+#define EDTRR(port)		(BASE_IO_ADDR + 0x0008)
+#define EDRRR(port)		(BASE_IO_ADDR + 0x0010)
+#define EESR(port)		(BASE_IO_ADDR + 0x0028)
+#define EESIPR(port)		(BASE_IO_ADDR + 0x0030)
+#define TRSCER(port)		(BASE_IO_ADDR + 0x0038)
+#define TFTR(port)		(BASE_IO_ADDR + 0x0048)
+#define FDR(port)		(BASE_IO_ADDR + 0x0050)
+#define RMCR(port)		(BASE_IO_ADDR + 0x0058)
+#define FCFTR(port)		(BASE_IO_ADDR + 0x0070)
+#define ECMR(port)		(BASE_IO_ADDR + 0x0100)
+#define RFLR(port)		(BASE_IO_ADDR + 0x0108)
+#define ECSIPR(port)		(BASE_IO_ADDR + 0x0118)
+#define PIR(port)		(BASE_IO_ADDR + 0x0120)
+#define APR(port)		(BASE_IO_ADDR + 0x0154)
+#define MPR(port)		(BASE_IO_ADDR + 0x0158)
+#define TPAUSER(port)		(BASE_IO_ADDR + 0x0164)
+#define MAHR(port)		(BASE_IO_ADDR + 0x01c0)
+#define MALR(port)		(BASE_IO_ADDR + 0x01c8)
+#endif
+
 /*
  * Register's bits
  * Copy from Linux driver source code
@@ -149,6 +177,10 @@ enum DMAC_M_BIT {
 	EDMR_SRST	= 0x03,
 	EMDR_DESC_R	= 0x30, /* Descriptor reserve size */
 	EDMR_EL		= 0x40, /* Litte endian */
+#elif defined CONFIG_CPU_SH7724
+	EDMR_SRST	= 0x01,
+	EMDR_DESC_R	= 0x30, /* Descriptor reserve size */
+	EDMR_EL		= 0x40, /* Litte endian */
 #else /* CONFIG_CPU_SH7763 */
 	EDMR_SRST = 0x01,
 #endif
@@ -287,7 +319,7 @@ enum FCFTR_BIT {
 
 /* Transfer descriptor bit */
 enum TD_STS_BIT {
-#ifdef CONFIG_CPU_SH7763
+#if defined(CONFIG_CPU_SH7763) || defined(CONFIG_CPU_SH7724)
 	TD_TACT = 0x80000000,
 #else
 	TD_TACT = 0x7fffffff,
@@ -312,13 +344,18 @@ enum FELIC_MODE_BIT {
 	ECMR_PMDE = 0x00000200, ECMR_RE = 0x00000040, ECMR_TE = 0x00000020,
 	ECMR_ILB = 0x00000008, ECMR_ELB = 0x00000004, ECMR_DM = 0x00000002,
 	ECMR_PRM = 0x00000001,
+#ifdef CONFIG_CPU_SH7724
+	ECMR_RTM = 0x00000010,
+#endif
 };
 
 #ifdef CONFIG_CPU_SH7763
 #define ECMR_CHG_DM	(ECMR_TRCCM | ECMR_RZPF | ECMR_ZPF | ECMR_PFR | ECMR_RXF | \
 						ECMR_TXF | ECMR_MCT)
+#elif CONFIG_CPU_SH7724
+#define ECMR_CHG_DM	(ECMR_ZPF | ECMR_PFR | ECMR_RXF | ECMR_TXF)
 #else
-#define ECMR_CHG_DM	(ECMR_ZPF | ECMR_PFR ECMR_RXF | ECMR_TXF | ECMR_MCT)
+#define ECMR_CHG_DM	(ECMR_ZPF | ECMR_PFR | ECMR_RXF | ECMR_TXF | ECMR_MCT)
 #endif
 
 /* ECSR */
diff -ruNp u-boot-2010.03/drivers/serial/serial_sh.c u-boot-2010.03-ecovec/drivers/serial/serial_sh.c
--- u-boot-2010.03/drivers/serial/serial_sh.c	2010-03-31 22:54:39.000000000 +0100
+++ u-boot-2010.03-ecovec/drivers/serial/serial_sh.c	2010-05-24 11:17:16.000000000 +0100
@@ -44,7 +44,8 @@
 #define SCFCR	(vu_short *)(SCIF_BASE + 0x18)
 #define SCFDR	(vu_short *)(SCIF_BASE + 0x1C)
 #if defined(CONFIG_CPU_SH7720) || \
-	(defined(CONFIG_CPU_SH7723) && defined(CONFIG_SCIF_A))
+	(defined(CONFIG_CPU_SH7723) && defined(CONFIG_SCIF_A)) || \
+	(defined(CONFIG_CPU_SH7724) && defined(CONFIG_SCIF_A))
 # define SCFSR	(vu_short *)(SCIF_BASE + 0x14)	/* SCSSR */
 # define SCFTDR	(vu_char  *)(SCIF_BASE + 0x20)
 # define SCFRDR	(vu_char  *)(SCIF_BASE + 0x24)
@@ -76,7 +77,7 @@
 # define LSR_ORER	1
 # define FIFOLEVEL_MASK	0xFF
 # endif
-#elif defined(CONFIG_CPU_SH7723)
+#elif defined(CONFIG_CPU_SH7723) || defined(CONFIG_CPU_SH7724)
 # if defined(CONFIG_SCIF_A)
 # define SCLSR	SCFSR
 # define LSR_ORER	0x0200
diff -ruNp u-boot-2010.03/drivers/usb/host/r8a66597.h u-boot-2010.03-ecovec/drivers/usb/host/r8a66597.h
--- u-boot-2010.03/drivers/usb/host/r8a66597.h	2010-03-31 22:54:39.000000000 +0100
+++ u-boot-2010.03-ecovec/drivers/usb/host/r8a66597.h	2010-05-24 11:17:16.000000000 +0100
@@ -438,7 +438,7 @@ static inline void r8a66597_read_fifo(st
 
 	count = len / 4;
 	for (i = 0; i < count; i++)
-		inl(p[i], r8a66597->reg + offset);
+		p[i] = inl(r8a66597->reg + offset);
 
 	if (len & 0x00000003) {
 		unsigned long tmp = inl(fifoaddr);
diff -ruNp u-boot-2010.03/drivers/usb/host/r8a66597-hcd.c u-boot-2010.03-ecovec/drivers/usb/host/r8a66597-hcd.c
--- u-boot-2010.03/drivers/usb/host/r8a66597-hcd.c	2010-03-31 22:54:39.000000000 +0100
+++ u-boot-2010.03-ecovec/drivers/usb/host/r8a66597-hcd.c	2010-05-24 11:17:16.000000000 +0100
@@ -286,9 +286,20 @@ static int send_setup_packet(struct r8a6
 				 (8 << dev->maxpacketsize), DCPMAXP);
 	r8a66597_write(r8a66597, ~(SIGN | SACK), INTSTS1);
 
-	for (i = 0; i < 4; i++) {
-		r8a66597_write(r8a66597, le16_to_cpu(p[i]), setup_addr);
-		setup_addr += 2;
+	if ((unsigned long)p & 0x00000001) {
+		unsigned char *pb = (unsigned char *)setup;
+		unsigned short tmp;
+
+		for (i = 0; i < 8; i += 2) {
+			tmp = pb[i] | (pb[i + 1] << 8);
+			r8a66597_write(r8a66597, le16_to_cpu(tmp), setup_addr);
+			setup_addr += 2;
+		}
+	} else {
+		for (i = 0; i < 4; i++) {
+			r8a66597_write(r8a66597, le16_to_cpu(p[i]), setup_addr);
+			setup_addr += 2;
+		}
 	}
 	r8a66597_write(r8a66597, ~0x0001, BRDYSTS);
 	r8a66597_write(r8a66597, SUREQ, DCPCTR);
@@ -422,6 +433,7 @@ static int receive_control_packet(struct
 {
 	u16 tmp;
 	int rcv_len;
+	unsigned long tmp_buf[64];	/* 4byte alignment */
 
 	/* FIXME: limit transfer size : 64byte or less */
 
@@ -454,8 +466,10 @@ static int receive_control_packet(struct
 	if (buffer) {
 		if (rcv_len == 0)
 			r8a66597_write(r8a66597, BCLR, DCPCTR);
-		else
-			r8a66597_read_fifo(r8a66597, CFIFO, buffer, rcv_len);
+		else {
+			r8a66597_read_fifo(r8a66597, CFIFO, tmp_buf, rcv_len);
+			memcpy(buffer, tmp_buf, rcv_len);
+		}
 	}
 
 	return 0;
@@ -473,17 +487,21 @@ static int send_status_packet(struct r8a
 		r8a66597_reg_wait(r8a66597, CFIFOSEL, CURPIPE, 0);
 		r8a66597_write(r8a66597, ~BEMP0, BEMPSTS);
 		r8a66597_write(r8a66597, BCLR | BVAL, CFIFOCTR);
+		r8a66597_mdfy(r8a66597, PID_BUF, PID, DCPCTR);
+		while (!(r8a66597_read(r8a66597, BEMPSTS) & 0x0001))
+			if (ctrlc())
+				return -1;
 	} else {
 		r8a66597_bclr(r8a66597, R8A66597_DIR, DCPCFG);
 		r8a66597_mdfy(r8a66597, 0, ISEL | CURPIPE, CFIFOSEL);
 		r8a66597_reg_wait(r8a66597, CFIFOSEL, CURPIPE, 0);
+		r8a66597_write(r8a66597, ~BRDY0, BRDYSTS);
 		r8a66597_write(r8a66597, BCLR, CFIFOCTR);
+		r8a66597_mdfy(r8a66597, PID_BUF, PID, DCPCTR);
+		while (!(r8a66597_read(r8a66597, BRDYSTS) & 0x0001))
+			if (ctrlc())
+				return -1;
 	}
-	r8a66597_mdfy(r8a66597, PID_BUF, PID, DCPCTR);
-
-	while (!(r8a66597_read(r8a66597, BEMPSTS) & 0x0001))
-		if (ctrlc())
-			return -1;
 
 	return 0;
 }
@@ -527,7 +545,6 @@ static int check_usb_device_connecting(s
 		/* check a usb cable connect */
 		while (!(r8a66597_read(r8a66597, INTSTS1) & ATTCH)) {
 			if (timeout-- < 0) {
-				printf("%s timeout.\n", __func__);
 				return -1;
 			}
 			udelay(100);
@@ -555,7 +572,7 @@ static int check_usb_device_connecting(s
 
 /* based on usb_ohci.c */
 #define min_t(type, x, y) \
-		({ type __x = (x); type __y = (y); __x < __y ? __x : __y; })
+		({ type __x = (x); type __y = (y); __x < __y ? __x: __y; })
 /*-------------------------------------------------------------------------*
  * Virtual Root Hub
  *-------------------------------------------------------------------------*/
@@ -676,6 +693,7 @@ static int r8a66597_submit_rh_msg(struct
 	__u16 wIndex;
 	__u16 wLength;
 	unsigned char data[32];
+	unsigned long tmp;
 
 	R8A66597_DPRINT("%s\n", __func__);
 
@@ -691,24 +709,29 @@ static int r8a66597_submit_rh_msg(struct
 
 	switch (bmRType_bReq) {
 	case RH_GET_STATUS:
-		*(__u16 *)buffer = cpu_to_le16(1);
+		tmp = cpu_to_le16(1);
+		memcpy(buffer, &tmp, 2);
 		len = 2;
 		break;
 	case RH_GET_STATUS | RH_INTERFACE:
-		*(__u16 *)buffer = cpu_to_le16(0);
+		tmp = cpu_to_le16(0);
+		memcpy(buffer, &tmp, 2);
 		len = 2;
 		break;
 	case RH_GET_STATUS | RH_ENDPOINT:
-		*(__u16 *)buffer = cpu_to_le16(0);
+		tmp = cpu_to_le16(0);
+		memcpy(buffer, &tmp, 2);
 		len = 2;
 		break;
 	case RH_GET_STATUS | RH_CLASS:
-		*(__u32 *)buffer = cpu_to_le32(0);
+		tmp = cpu_to_le32(0);
+		memcpy(buffer, &tmp, 4);
 		len = 4;
 		break;
 	case RH_GET_STATUS | RH_OTHER | RH_CLASS:
-		*(__u32 *)buffer = cpu_to_le32(r8a66597->port_status |
+		tmp = cpu_to_le32(r8a66597->port_status |
 						(r8a66597->port_change << 16));
+		memcpy(buffer, &tmp, 4);
 		len = 4;
 		break;
 	case RH_CLEAR_FEATURE | RH_ENDPOINT:
@@ -819,7 +842,7 @@ static int r8a66597_submit_rh_msg(struct
 	case RH_SET_CONFIGURATION:
 		break;
 	default:
-		R8A66597_DPRINT("unsupported root hub command");
+		dbg("unsupported root hub command");
 		stat = USB_ST_STALLED;
 	}
 
diff -ruNp u-boot-2010.03/include/asm-sh/cpu_sh4.h u-boot-2010.03-ecovec/include/asm-sh/cpu_sh4.h
--- u-boot-2010.03/include/asm-sh/cpu_sh4.h	2010-03-31 22:54:39.000000000 +0100
+++ u-boot-2010.03-ecovec/include/asm-sh/cpu_sh4.h	2010-05-24 11:17:16.000000000 +0100
@@ -44,6 +44,8 @@
 # include <asm/cpu_sh7722.h>
 #elif defined (CONFIG_CPU_SH7723)
 # include <asm/cpu_sh7723.h>
+#elif defined (CONFIG_CPU_SH7724)
+# include <asm/cpu_sh7724.h>
 #elif defined (CONFIG_CPU_SH7763)
 # include <asm/cpu_sh7763.h>
 #elif defined (CONFIG_CPU_SH7780)
diff -ruNp u-boot-2010.03/include/asm-sh/cpu_sh7724.h u-boot-2010.03-ecovec/include/asm-sh/cpu_sh7724.h
--- u-boot-2010.03/include/asm-sh/cpu_sh7724.h	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-2010.03-ecovec/include/asm-sh/cpu_sh7724.h	2010-05-24 11:17:16.000000000 +0100
@@ -0,0 +1,230 @@
+/*
+ * (C) Copyright 2009 Renesas Solutions Corp.
+ *
+ * Kuninori Morimoto <morimoto.kuninori@renesas.com>
+ *
+ * SH7724 Internal I/O register
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef _ASM_CPU_SH7724_H_
+#define _ASM_CPU_SH7724_H_
+
+#define CACHE_OC_NUM_WAYS	4
+#define CCR_CACHE_INIT	0x0000090b
+
+/* EXP */
+#define TRA	0xFF000020
+#define EXPEVT	0xFF000024
+#define INTEVT	0xFF000028
+
+/* MMU */
+#define PTEH	0xFF000000
+#define PTEL	0xFF000004
+#define TTB	0xFF000008
+#define TEA	0xFF00000C
+#define MMUCR	0xFF000010
+#define PASCR	0xFF000070
+#define IRMCR	0xFF000078
+
+/* CACHE */
+#define CCR	0xFF00001C
+#define RAMCR	0xFF000074
+
+/* INTC */
+
+/* BSC */
+#define MMSELR		0xFF800020
+#define CMNCR		0xFEC10000
+#define	CS0BCR		0xFEC10004
+#define CS4BCR		0xFEC10010
+#define CS5ABCR		0xFEC10014
+#define CS5BBCR		0xFEC10018
+#define CS6ABCR		0xFEC1001C
+#define CS6BBCR		0xFEC10020
+#define CS0WCR		0xFEC10024
+#define CS4WCR		0xFEC10030
+#define CS5AWCR		0xFEC10034
+#define CS5BWCR		0xFEC10038
+#define CS6AWCR		0xFEC1003C
+#define CS6BWCR		0xFEC10040
+#define RBWTCNT		0xFEC10054
+
+/* SBSC */
+#define SBSC_SDCR	0xFE400008
+#define SBSC_SDWCR	0xFE40000C
+#define SBSC_SDPCR	0xFE400010
+#define SBSC_RTCSR	0xFE400014
+#define SBSC_RTCNT	0xFE400018
+#define SBSC_RTCOR	0xFE40001C
+#define SBSC_RFCR	0xFE400020
+
+/* DBSC */
+#define	DBKIND		0xFD000008
+#define	DBSTATE		0xFD00000C
+#define	DBEN		0xFD000010
+#define	DBCMDCNT	0xFD000014
+#define	DBCKECNT	0xFD000018
+#define	DBCONF		0xFD000020
+#define	DBTR0		0xFD000030
+#define	DBTR1		0xFD000034
+#define	DBTR2		0xFD000038
+#define	DBTR3		0xFD00003C
+#define	DBRFPDN0	0xFD000040
+#define	DBRFPDN1	0xFD000044
+#define	DBRFPDN2	0xFD000048
+#define	DBRFSTS		0xFD00004C
+#define	DBMRCNT		0xFD000060
+#define	DBPDCNT0	0xFD000108
+
+/* DMAC */
+
+/* CPG */
+#define FRQCRA      0xA4150000
+#define FRQCRB      0xA4150004
+#define VCLKCR      0xA4150048
+#define IRDACLKCR   0xA4150018
+#define PLLCR       0xA4150024
+#define FLLFRQ      0xA4150050
+
+/* LOW POWER MODE */
+#define STBCR       0xA4150020
+#define MSTPCR0     0xA4150030
+#define MSTPCR1     0xA4150034
+#define MSTPCR2     0xA4150038
+
+/* RWDT */
+#define RWTCNT      0xA4520000
+#define RWTCSR      0xA4520004
+#define WTCNT		RWTCNT
+
+/* TMU */
+#define TSTR        0xFFD80004
+#define TCOR0       0xFFD80008
+#define TCNT0       0xFFD8000C
+#define TCR0        0xFFD80010
+#define TCOR1       0xFFD80014
+#define TCNT1       0xFFD80018
+#define TCR1        0xFFD8001C
+#define TCOR2       0xFFD80020
+#define TCNT2       0xFFD80024
+#define TCR2        0xFFD80028
+
+/* TPU */
+
+/* CMT */
+#define CMSTR       0xA44A0000
+#define CMCSR       0xA44A0060
+#define CMCNT       0xA44A0064
+#define CMCOR       0xA44A0068
+
+/* MSIOF */
+
+/* SCIF */
+#define SCIF0_BASE  0xFFE00000
+#define SCIF1_BASE  0xFFE10000
+#define SCIF2_BASE  0xFFE20000
+#define SCIF3_BASE  0xa4e30000
+#define SCIF4_BASE  0xa4e40000
+#define SCIF5_BASE  0xa4e50000
+
+/* RTC */
+/* IrDA */
+/* KEYSC */
+/* USB */
+/* IIC */
+/* FLCTL */
+/* VPU */
+/* VIO(CEU) */
+/* VIO(VEU) */
+/* VIO(BEU) */
+/* 2DG */
+/* LCDC */
+/* VOU */
+/* TSIF */
+/* SIU */
+/* ATAPI */
+
+/* PFC */
+#define PACR        0xA4050100
+#define PBCR        0xA4050102
+#define PCCR        0xA4050104
+#define PDCR        0xA4050106
+#define PECR        0xA4050108
+#define PFCR        0xA405010A
+#define PGCR        0xA405010C
+#define PHCR        0xA405010E
+#define PJCR        0xA4050110
+#define PKCR        0xA4050112
+#define PLCR        0xA4050114
+#define PMCR        0xA4050116
+#define PNCR        0xA4050118
+#define PQCR        0xA405011A
+#define PRCR        0xA405011C
+#define PSCR        0xA405011E
+#define PTCR        0xA4050140
+#define PUCR        0xA4050142
+#define PVCR        0xA4050144
+#define PWCR        0xA4050146
+#define PXCR        0xA4050148
+#define PYCR        0xA405014A
+#define PZCR        0xA405014C
+#define PSELA       0xA405014E
+#define PSELB       0xA4050150
+#define PSELC       0xA4050152
+#define PSELD       0xA4050154
+#define PSELE       0xA4050156
+#define HIZCRA      0xA4050158
+#define HIZCRB      0xA405015A
+#define HIZCRC      0xA405015C
+#define HIZCRD      0xA405015E
+#define MSELCRA     0xA4050180
+#define MSELCRB     0xA4050182
+#define PULCR       0xA4050184
+#define DRVCRA      0xA405018A
+#define DRVCRB      0xA405018C
+#define DRVCRC      0xA405018E
+
+/* I/O Port */
+#define PADR        0xA4050120
+#define PBDR        0xA4050122
+#define PCDR        0xA4050124
+#define PDDR        0xA4050126
+#define PEDR        0xA4050128
+#define PFDR        0xA405012A
+#define PGDR        0xA405012C
+#define PHDR        0xA405012E
+#define PJDR        0xA4050130
+#define PKDR        0xA4050132
+#define PLDR        0xA4050134
+#define PMDR        0xA4050136
+#define PNDR        0xA4050138
+#define PQDR        0xA405013A
+#define PRDR        0xA405013C
+#define PSDR        0xA405013E
+#define PTDR        0xA4050160
+#define PUDR        0xA4050162
+#define PVDR        0xA4050164
+#define PWDR        0xA4050166
+#define PXDR        0xA4050168
+#define PYDR        0xA405016A
+#define PZDR        0xA405016C
+
+/* UBC */
+/* H-UDI */
+
+#endif /* _ASM_CPU_SH7724_H_ */
diff -ruNp u-boot-2010.03/include/asm-sh/macro.h u-boot-2010.03-ecovec/include/asm-sh/macro.h
--- u-boot-2010.03/include/asm-sh/macro.h	2010-03-31 22:54:39.000000000 +0100
+++ u-boot-2010.03-ecovec/include/asm-sh/macro.h	2010-05-24 11:17:29.000000000 +0100
@@ -35,7 +35,7 @@
 
 .macro	write8, addr, data
 	mov.l \addr ,r1
-	mov.l \data ,r0
+	mov.w \data ,r0
 	mov.b r0, @r1
 .endm
 
diff -ruNp u-boot-2010.03/include/configs/ecovec.h u-boot-2010.03-ecovec/include/configs/ecovec.h
--- u-boot-2010.03/include/configs/ecovec.h	1970-01-01 01:00:00.000000000 +0100
+++ u-boot-2010.03-ecovec/include/configs/ecovec.h	2010-05-24 17:01:58.000000000 +0100
@@ -0,0 +1,191 @@
+/*
+ * Configuation settings for the Renesas Solutions ECOVEC board
+ *
+ * Copyright (C) 2009 Renesas Solutions Corp.
+ * Copyright (C) 2009 Kuninori Morimoto <morimoto.kuninori@renesas.com>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+#ifndef __ECOVEC_H
+#define __ECOVEC_H
+
+/*
+ *  Address      Interface        BusWidth
+ *-----------------------------------------
+ *  0x0000_0000  uboot            16bit
+ *  0x0004_0000  Linux romImage   16bit
+ *  0x0014_0000  MTD for Linux    16bit
+ *  0x0400_0000  Internal I/O     16/32bit
+ *  0x0800_0000  DRAM             32bit
+ *  0x1800_0000  MFI              16bit
+ */
+
+#undef DEBUG
+#define CONFIG_SH		1
+#define CONFIG_SH4		1
+#define CONFIG_CPU_SH7724	1
+#define BOARD_LATE_INIT		1
+#define CONFIG_ECOVEC		1
+
+#define CFG_ECOVEC_ROMIMAGE_ADDR	0xA0040000
+
+//#define CONFIG_CMD_LOADB
+//#define CONFIG_CMD_LOADS
+#define CONFIG_CMD_FLASH
+#define CONFIG_CMD_MEMORY
+#define CONFIG_CMD_NET
+#define CONFIG_CMD_PING
+//#define CONFIG_CMD_NFS
+//#define CONFIG_CMD_SDRAM
+#define CONFIG_CMD_ENV
+#define CONFIG_CMD_USB
+#define CONFIG_CMD_FAT
+#define CONFIG_CMD_EXT2
+#define CONFIG_CMD_SAVEENV
+
+#define CONFIG_USB_STORAGE
+#define CONFIG_DOS_PARTITION
+
+#define CONFIG_BAUDRATE		115200
+#define CONFIG_BOOTDELAY	3
+#define CONFIG_BOOTARGS		"console=ttySC0,115200"
+
+#define CONFIG_VERSION_VARIABLE
+#undef  CONFIG_SHOW_BOOT_PROGRESS
+
+/* SH-Eth */
+#define CONFIG_SH_ETHER 1
+#define CONFIG_SH_ETHER_USE_PORT (0)
+#define CONFIG_SH_ETHER_PHY_ADDR (0x1f)
+
+/* R8A66597 */
+#define CONFIG_NET_MULTI
+#define LITTLEENDIAN			/* for include/usb.h */
+#define CONFIG_USB_R8A66597_HCD
+#define CONFIG_R8A66597_BASE_ADDR	0xA4D80000
+#define CONFIG_R8A66597_XTAL		0x0000	/* 12MHz */
+#define CONFIG_R8A66597_LDRV		0x8000	/* 3.3V */
+#define CONFIG_R8A66597_ENDIAN		0x0000	/* little */
+#define CONFIG_SUPERH_ON_CHIP_R8A66597
+
+/* MEMORY */
+#define ECOVEC_SDRAM_BASE		(0x88000000)
+#define ECOVEC_FLASH_BASE		(0xA0000000)
+#define ECOVEC_FLASH_BANK_SIZE		(32 * 1024 * 1024)
+
+/* undef to save memory	*/
+#define CONFIG_SYS_LONGHELP
+/* Monitor Command Prompt */
+#define CONFIG_SYS_PROMPT		"=> "
+/* Buffer size for input from the Console */
+#define CONFIG_SYS_CBSIZE		256
+/* Buffer size for Console output */
+#define CONFIG_SYS_PBSIZE		256
+/* max args accepted for monitor commands */
+#define CONFIG_SYS_MAXARGS		16
+/* Buffer size for Boot Arguments passed to kernel */
+#define CONFIG_SYS_BARGSIZE	512
+/* List of legal baudrate settings for this board */
+#define CONFIG_SYS_BAUDRATE_TABLE	{ 115200 }
+
+/* SCIF */
+#define CONFIG_SCIF_CONSOLE	1
+#define CONFIG_SCIF		1
+#define CONFIG_CONS_SCIF0	1
+
+/* Suppress display of console information at boot */
+#undef  CONFIG_SYS_CONSOLE_INFO_QUIET
+#undef  CONFIG_SYS_CONSOLE_OVERWRITE_ROUTINE
+#undef  CONFIG_SYS_CONSOLE_ENV_OVERWRITE
+
+#define CONFIG_SYS_MEMTEST_START	(ECOVEC_SDRAM_BASE)
+#define CONFIG_SYS_MEMTEST_END		(CONFIG_SYS_MEMTEST_START + 200 * 1024 *1024)
+
+/* Enable alternate, more extensive, memory test */
+#undef  CONFIG_SYS_ALT_MEMTEST
+/* Scratch address used by the alternate memory test */
+#undef  CONFIG_SYS_MEMTEST_SCRATCH
+
+/* Enable temporary baudrate change while serial download */
+#undef  CONFIG_SYS_LOADS_BAUD_CHANGE
+
+#define CONFIG_SYS_SDRAM_BASE	(ECOVEC_SDRAM_BASE)
+/* maybe more, but if so u-boot doesn't know about it... */
+#define CONFIG_SYS_SDRAM_SIZE	(256 * 1024 * 1024)
+/* default load address for scripts ?!? */
+#define CONFIG_SYS_LOAD_ADDR	(CONFIG_SYS_SDRAM_BASE + 16 * 1024 * 1024)
+
+/* Address of u-boot image in Flash (NOT run time address in SDRAM) ?!? */
+#define CONFIG_SYS_MONITOR_BASE	(ECOVEC_FLASH_BASE)
+/* Monitor size */
+#define CONFIG_SYS_MONITOR_LEN	(128 * 1024)
+/* Size of DRAM reserved for malloc() use */
+#define CONFIG_SYS_MALLOC_LEN	(256 * 1024)
+/* size in bytes reserved for initial data */
+#define CONFIG_SYS_GBL_DATA_SIZE	(256)
+#define CONFIG_SYS_BOOTMAPSZ	(8 * 1024 * 1024)
+
+/* FLASH */
+#define CONFIG_FLASH_CFI_DRIVER 1
+#define CONFIG_SYS_FLASH_CFI
+#undef  CONFIG_SYS_FLASH_QUIET_TEST
+/* print 'E' for empty sector on flinfo */
+#define CONFIG_SYS_FLASH_EMPTY_INFO
+/* Physical start address of Flash memory */
+#define CONFIG_SYS_FLASH_BASE	(ECOVEC_FLASH_BASE)
+/* Max number of sectors on each Flash chip */
+#define CONFIG_SYS_MAX_FLASH_SECT	512
+
+/* if you use all NOR Flash , you change dip-switch. Please see Manual. */
+#define CONFIG_SYS_MAX_FLASH_BANKS	1
+#define CONFIG_SYS_FLASH_BANKS_LIST { CONFIG_SYS_FLASH_BASE + (0 * ECOVEC_FLASH_BANK_SIZE)}
+
+/* Timeout for Flash erase operations (in ms) */
+#define CONFIG_SYS_FLASH_ERASE_TOUT	(3 * 1000)
+/* Timeout for Flash write operations (in ms) */
+#define CONFIG_SYS_FLASH_WRITE_TOUT	(3 * 1000)
+/* Timeout for Flash set sector lock bit operations (in ms) */
+#define CONFIG_SYS_FLASH_LOCK_TOUT	(3 * 1000)
+/* Timeout for Flash clear lock bit operations (in ms) */
+#define CONFIG_SYS_FLASH_UNLOCK_TOUT	(3 * 1000)
+
+/*
+ * Use hardware flash sectors protection instead
+ * of U-Boot software protection
+ */
+#undef  CONFIG_SYS_FLASH_PROTECTION
+#undef  CONFIG_SYS_DIRECT_FLASH_TFTP
+
+/* ENV setting */
+#define CONFIG_ENV_IS_IN_FLASH
+#define CONFIG_ENV_OVERWRITE	1
+#define CONFIG_ENV_SECT_SIZE	(128 * 1024)
+#define CONFIG_ENV_SIZE		(CONFIG_ENV_SECT_SIZE)
+#define CONFIG_ENV_ADDR		(CONFIG_SYS_FLASH_BASE + CONFIG_SYS_MONITOR_LEN)
+/* Offset of env Flash sector relative to CONFIG_SYS_FLASH_BASE */
+#define CONFIG_ENV_OFFSET		(CONFIG_ENV_ADDR - CONFIG_SYS_FLASH_BASE)
+#define CONFIG_ENV_SIZE_REDUND	(CONFIG_ENV_SECT_SIZE)
+
+/* Board Clock */
+#define CONFIG_SYS_CLK_FREQ	41666666
+#define CONFIG_SYS_TMU_CLK_DIV	4	/* 4 (default), 16, 64, 256 or 1024 */
+#define CONFIG_SYS_HZ		1000
+
+#endif	/* __ECOVEC_H */
diff -ruNp u-boot-2010.03/Makefile u-boot-2010.03-ecovec/Makefile
--- u-boot-2010.03/Makefile	2010-03-31 22:54:39.000000000 +0100
+++ u-boot-2010.03-ecovec/Makefile	2010-05-24 11:17:16.000000000 +0100
@@ -3652,6 +3652,11 @@ ms7722se_config :	unconfig
 	@echo "#define CONFIG_MS7722SE 1" > $(obj)include/config.h
 	@$(MKCONFIG) -a $(@:_config=) sh sh4 ms7722se
 
+ecovec_config  :   unconfig
+	@mkdir -p $(obj)include
+	@echo "#define CONFIG_ECOVEC 1" > $(obj)include/config.h
+	@$(MKCONFIG) -a $(@:_config=) sh sh4 ecovec renesas
+
 r2dplus_config  :   unconfig
 	@mkdir -p $(obj)include
 	@echo "#define CONFIG_R2DPLUS 1" > $(obj)include/config.h
